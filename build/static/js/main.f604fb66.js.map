{"version":3,"file":"static/js/main.f604fb66.js","mappings":"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","sources":["cart/cart.js","utils/helpers.js","products/productDetails.js","index.js","footer.js","products/productList.js"],"sourcesContent":["export function updateCartCount() {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const cartCount = cart.reduce((total, item) => total + item.quantity, 0);\n    const cartCountElement = document.getElementById('cart-count');\n\n    if (cartCountElement) {\n        cartCountElement.innerText = cartCount;\n    }\n}\n\nexport function addToCart(product) {\n    if (!product || !product.id || typeof product.stock !== 'number' || typeof product.price !== 'number') {\n        console.error('Invalid product data:', product);\n        return;\n    }\n\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const existingProduct = cart.find(item => item.id === product.id);\n\n    if (existingProduct) {\n        if (existingProduct.quantity < product.stock) {\n            existingProduct.quantity += 1;\n        } else {\n            alert(\"Maximum quantity reached!\");\n            return;\n        }\n    } else {\n        if (product.stock > 0) {\n            cart.push({ ...product, quantity: 1 });\n        } else {\n            alert(\"This product is not available anymore.\");\n            return;\n        }\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n    updateCartCount();\n}\n\nexport function removeFromCart(productId) {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n    cart = cart.filter(item => item.id !== productId);\n    localStorage.setItem('cart', JSON.stringify(cart));\n    updateCartCount();\n}\n","// Funktion zum Abrufen von Produkten aus dem Backend\nexport async function fetchProducts() {\n    try {\n        const response = await fetch('/.netlify/functions/get-products');\n        if (!response.ok) {\n            throw new Error(`Error loading products: ${response.statusText}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error loading products:', error);\n        return [];\n    }\n}\n\n// Funktion zur Erstellung einer PayPal-Bestellung\nexport async function createPayPalOrder(cartItems) {\n    try {\n        const response = await fetch('/.netlify/functions/create-paypal-order', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ cartItems }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to create PayPal order');\n        }\n\n        const data = await response.json();\n        return data.orderID;\n    } catch (error) {\n        console.error('Error creating PayPal order:', error);\n        throw error;\n    }\n}\n\n// Funktion zur Analyse der URL und Extrahierung von Parametern\nexport function getQueryParams() {\n    const params = {};\n    const queryString = window.location.search;\n    if (queryString) {\n        const urlParams = new URLSearchParams(queryString);\n        for (const [key, value] of urlParams.entries()) {\n            params[key] = value;\n        }\n    }\n    return params;\n}\n","import { fetchProducts } from '../utils/helpers.js';\n\n// Funktion zur Anzeige der Produktdetails\nexport async function displayProductDetails() {\n    const pathParts = window.location.pathname.split('/');\n    const productId = pathParts[pathParts.length - 1]; // Extrahiere die ID vom Ende des Pfads\n\n    const products = await fetchProducts();\n    if (!products) return;\n\n    const product = products.find(p => p.id === productId);\n    if (!product) {\n        document.getElementById('product-detail-container').innerHTML = `<p>Produkt nicht gefunden.</p>`;\n        return;\n    }\n\n    createProductImages(product);\n    displayProductInfo(product);\n    addButtonsAndEventListeners(product);\n}\n\n// Hilfsfunktion zur Erstellung der Hauptbilder und Thumbnails\nfunction createProductImages(product) {\n    const mainImageContainer = document.querySelector('.product-main-image-container');\n    const thumbnailsContainer = document.querySelector('.product-thumbnail-container');\n\n    mainImageContainer.innerHTML = '';\n    thumbnailsContainer.innerHTML = '';\n\n    let currentIndex = 0;\n\n    const imgElement = document.createElement('img');\n    imgElement.src = product.images[currentIndex];\n    imgElement.alt = product.name;\n    imgElement.className = 'product-main-image';\n    mainImageContainer.appendChild(imgElement);\n\n    product.images.forEach((imageUrl, index) => {\n        const thumbnail = document.createElement('img');\n        thumbnail.src = imageUrl;\n        thumbnail.alt = `${product.name} - Vorschau ${index + 1}`;\n        thumbnail.className = 'product-thumbnail';\n        if (index === currentIndex) thumbnail.classList.add('active');\n        thumbnail.addEventListener('click', () => {\n            currentIndex = index;\n            updateImage(imgElement, currentIndex, product.images);\n        });\n        thumbnailsContainer.appendChild(thumbnail);\n    });\n}\n\nfunction updateImage(imgElement, currentIndex, images) {\n    imgElement.src = images[currentIndex];\n    document.querySelectorAll('.product-thumbnail').forEach((thumb, index) => {\n        thumb.classList.toggle('active', index === currentIndex);\n    });\n}\n\nfunction displayProductInfo(product) {\n    const infoContainer = document.querySelector('.product-info');\n    infoContainer.innerHTML = `\n        <a href=\"/shop\" class=\"back-link\">Back to Collection</a>\n        <h1 class=\"product-title-details\">${product.name}</h1>\n        <p class=\"product-price\">â‚¬${product.price.toFixed(2)}</p>\n        <p class=\"product-description\">${product.description}</p>\n    `;\n}\n\nfunction addButtonsAndEventListeners(product) {\n    const infoContainer = document.querySelector('.product-info');\n\n    const buttonContainer = document.createElement('div');\n    buttonContainer.className = 'button-container';\n\n    const directCheckoutButton = document.createElement('button');\n    directCheckoutButton.id = 'direct-checkout-button';\n    directCheckoutButton.className = 'checkout-button';\n    directCheckoutButton.textContent = 'Direct Checkout';\n    directCheckoutButton.addEventListener('click', () => {\n        window.location.href = `/.netlify/functions/get-paypal-link?productId=${product.id}`;\n    });\n    buttonContainer.appendChild(directCheckoutButton);\n\n    const orElement = document.createElement('p');\n    orElement.className = 'or-text';\n    orElement.textContent = 'OR';\n    buttonContainer.appendChild(orElement);\n\n    const addToCartButton = document.createElement('button');\n    addToCartButton.className = 'add-to-cart-button';\n    addToCartButton.textContent = 'Add to cart';\n    addToCartButton.addEventListener('click', () => {\n        addToCart(product);\n        document.getElementById('cart-popup').classList.add('open');\n    });\n    buttonContainer.appendChild(addToCartButton);\n\n    infoContainer.appendChild(buttonContainer);\n}\n","import { createFooter } from './footer.js';\nimport { updateCartCount } from './cart/cart.js';\nimport { displayProductList } from './products/productList.js';\nimport { displayProductDetails } from './products/productDetails.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    updateCartCount();\n\n    const currentPath = window.location.pathname;\n\n    if (!document.getElementById('landing-container')) {\n        createFooter();\n    }\n\n    if (document.getElementById('product-container')) {\n        displayProductList(getCategoryFromPath(currentPath));\n    } else if (document.getElementById('product-detail-container')) {\n        displayProductDetails();\n    }\n    \n});\n\nfunction getCategoryFromPath(path) {\n    switch (path) {\n        case '/bags': return 'bags';\n        case '/balaclavas': return 'balaclavas';\n        case '/handwarmers': return 'hand warmers';\n        case '/otheraccessories': return 'other accessories';\n        default: return 'all';\n    }\n}\n","export function createFooter() {\n    const footer = document.createElement('footer');\n    footer.className = 'custom-footer';\n    footer.innerHTML = `\n        <div class=\"social-icons-container\">\n            <a href=\"https://www.tiktok.com/@nalancreations?_t=8r3okcluwcL&_r=1\" target=\"_blank\" class=\"tiktok-link\">\n                <img src=\"/images/tiktok-logo.png\" alt=\"TikTok Logo\" class=\"social-icon tiktok-icon\">\n            </a>\n            <a href=\"https://www.instagram.com/nalancreations\" target=\"_blank\">\n                <img src=\"/images/insta-logo.png\" alt=\"Instagram Logo\" class=\"social-icon\">\n            </a>\n        </div>\n        <div class=\"footer-branding\">&copy; 2024 NALANCREATIONS. ALL RIGHTS RESERVED.</div>\n        <div class=\"legal-links\">\n            <a href=\"/imprint\">Imprint</a>\n            <a href=\"/privacy\">Privacy Policy</a>\n            <a href=\"/terms\">Terms & Conditions</a>\n            <a href=\"/cancellation\">Right of Withdrawal</a>\n        </div>\n    `;\n    document.body.appendChild(footer);\n}\n","import { fetchProducts } from '../utils/helpers.js';\n\nexport async function displayProductList(category = null, size = null) {\n    const products = await fetchProducts();\n    if (!products) return;\n\n    const productContainer = document.getElementById('product-container');\n    const productTitle = document.getElementById('product-title');\n\n    productContainer.innerHTML = '';\n\n    let filteredProducts = (category && category !== 'all') \n        ? products.filter(product => product.category.toLowerCase() === category.toLowerCase()) \n        : products;\n\n    if (size && size !== 'all') {\n        filteredProducts = filteredProducts.filter(product => product.size && product.size.toLowerCase() === size.toLowerCase());\n    }\n\n    productTitle.innerHTML = (category && category !== 'all') \n    ? `${category.charAt(0).toUpperCase() + category.slice(1)}` \n    : 'All<span class=\"mobile-line-break\"> </span>Products';\n\n    filteredProducts.forEach(product => {\n        const productCard = document.createElement('div');\n        productCard.className = 'product-card';\n        productCard.innerHTML = `\n            <a href=\"/product/${product.id}\" class=\"product-link\">\n                <img src=\"${product.images[0]}\" alt=\"${product.name}\">\n                <h2>${product.name}</h2>\n            </a>\n            <p class=\"product-price-shop\">\n                <span class=\"price-amount-shop\">${product.price}</span><span class=\"price-currency-shop\"> â‚¬</span>\n            </p>\n`;\n\n        productContainer.appendChild(productCard);\n    });\n\n}\n"],"names":["updateCartCount","cartCount","JSON","parse","localStorage","getItem","reduce","total","item","quantity","cartCountElement","document","getElementById","innerText","async","fetchProducts","response","fetch","ok","Error","concat","statusText","json","error","console","displayProductDetails","pathParts","window","location","pathname","split","productId","length","products","product","find","p","id","mainImageContainer","querySelector","thumbnailsContainer","innerHTML","currentIndex","imgElement","createElement","src","images","alt","name","className","appendChild","forEach","imageUrl","index","thumbnail","classList","add","addEventListener","querySelectorAll","thumb","toggle","updateImage","createProductImages","price","toFixed","description","displayProductInfo","infoContainer","buttonContainer","directCheckoutButton","textContent","href","orElement","addToCartButton","addToCart","addButtonsAndEventListeners","currentPath","footer","body","createFooter","category","arguments","undefined","size","productContainer","productTitle","filteredProducts","filter","toLowerCase","charAt","toUpperCase","slice","productCard","displayProductList","path","getCategoryFromPath"],"sourceRoot":""}