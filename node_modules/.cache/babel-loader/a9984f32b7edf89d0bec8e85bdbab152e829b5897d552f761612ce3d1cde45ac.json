{"ast":null,"code":"import { setupCart } from './cart/cart';\nimport { setupProductList, setupProductDetails } from './products/productList';\nimport { setupFooter } from './footer';\nimport { applyFilters } from './filters';\n\n// Seite initialisieren\ndocument.addEventListener('DOMContentLoaded', () => {\n  setupCart();\n  applyFilters();\n  setupFooter();\n\n  // Produktlisten oder Details anzeigen, basierend auf dem aktuellen Pfad\n  const currentPath = window.location.pathname;\n  if (currentPath.includes('/shop')) {\n    setupProductList();\n  } else if (currentPath.includes('/product')) {\n    setupProductDetails();\n  }\n});","map":{"version":3,"names":["setupCart","setupProductList","setupProductDetails","setupFooter","applyFilters","document","addEventListener","currentPath","window","location","pathname","includes"],"sources":["/Users/torbenschmidt/Documents/GitHub/nalan-shop/src/index.js"],"sourcesContent":["import { setupCart } from './cart/cart';\nimport { setupProductList, setupProductDetails } from './products/productList';\nimport { setupFooter } from './footer';\nimport { applyFilters } from './filters';\n\n// Seite initialisieren\ndocument.addEventListener('DOMContentLoaded', () => {\n    setupCart();\n    applyFilters();\n    setupFooter();\n\n    // Produktlisten oder Details anzeigen, basierend auf dem aktuellen Pfad\n    const currentPath = window.location.pathname;\n\n    if (currentPath.includes('/shop')) {\n        setupProductList();\n    } else if (currentPath.includes('/product')) {\n        setupProductDetails();\n    }\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,wBAAwB;AAC9E,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,YAAY,QAAQ,WAAW;;AAExC;AACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChDN,SAAS,CAAC,CAAC;EACXI,YAAY,CAAC,CAAC;EACdD,WAAW,CAAC,CAAC;;EAEb;EACA,MAAMI,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAE5C,IAAIH,WAAW,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC/BV,gBAAgB,CAAC,CAAC;EACtB,CAAC,MAAM,IAAIM,WAAW,CAACI,QAAQ,CAAC,UAAU,CAAC,EAAE;IACzCT,mBAAmB,CAAC,CAAC;EACzB;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}