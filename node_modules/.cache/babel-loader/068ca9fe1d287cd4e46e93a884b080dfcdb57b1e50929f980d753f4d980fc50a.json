{"ast":null,"code":"// Funktion zum Abrufen von Produkten aus dem Backend\nexport async function fetchProducts() {\n  try {\n    const response = await fetch('/.netlify/functions/get-products');\n    if (!response.ok) {\n      throw new Error(`Error loading products: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error loading products:', error);\n    return [];\n  }\n}\n\n// Funktion zur Erstellung einer PayPal-Bestellung\nexport async function createPayPalOrder(cartItems) {\n  try {\n    const response = await fetch('/.netlify/functions/create-paypal-order', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cartItems\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create PayPal order');\n    }\n    const data = await response.json();\n    return data.orderID;\n  } catch (error) {\n    console.error('Error creating PayPal order:', error);\n    throw error;\n  }\n}\n\n// Funktion zur Analyse der URL und Extrahierung von Parametern\nexport function getQueryParams() {\n  const params = {};\n  const queryString = window.location.search;\n  if (queryString) {\n    const urlParams = new URLSearchParams(queryString);\n    for (const [key, value] of urlParams.entries()) {\n      params[key] = value;\n    }\n  }\n  return params;\n}","map":{"version":3,"names":["fetchProducts","response","fetch","ok","Error","statusText","json","error","console","createPayPalOrder","cartItems","method","headers","body","JSON","stringify","data","orderID","getQueryParams","params","queryString","window","location","search","urlParams","URLSearchParams","key","value","entries"],"sources":["/Users/torbenschmidt/Documents/GitHub/nalan-shop/src/utils/helpers.js"],"sourcesContent":["// Funktion zum Abrufen von Produkten aus dem Backend\nexport async function fetchProducts() {\n    try {\n        const response = await fetch('/.netlify/functions/get-products');\n        if (!response.ok) {\n            throw new Error(`Error loading products: ${response.statusText}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error loading products:', error);\n        return [];\n    }\n}\n\n// Funktion zur Erstellung einer PayPal-Bestellung\nexport async function createPayPalOrder(cartItems) {\n    try {\n        const response = await fetch('/.netlify/functions/create-paypal-order', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ cartItems }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to create PayPal order');\n        }\n\n        const data = await response.json();\n        return data.orderID;\n    } catch (error) {\n        console.error('Error creating PayPal order:', error);\n        throw error;\n    }\n}\n\n// Funktion zur Analyse der URL und Extrahierung von Parametern\nexport function getQueryParams() {\n    const params = {};\n    const queryString = window.location.search;\n    if (queryString) {\n        const urlParams = new URLSearchParams(queryString);\n        for (const [key, value] of urlParams.entries()) {\n            params[key] = value;\n        }\n    }\n    return params;\n}\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,aAAaA,CAAA,EAAG;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2BH,QAAQ,CAACI,UAAU,EAAE,CAAC;IACrE;IACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACb;AACJ;;AAEA;AACA,OAAO,eAAeE,iBAAiBA,CAACC,SAAS,EAAE;EAC/C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACpES,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAU,CAAC;IACtC,CAAC,CAAC;IAEF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACpD;IAEA,MAAMY,IAAI,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOU,IAAI,CAACC,OAAO;EACvB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA,OAAO,SAASW,cAAcA,CAAA,EAAG;EAC7B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;EAC1C,IAAIH,WAAW,EAAE;IACb,MAAMI,SAAS,GAAG,IAAIC,eAAe,CAACL,WAAW,CAAC;IAClD,KAAK,MAAM,CAACM,GAAG,EAAEC,KAAK,CAAC,IAAIH,SAAS,CAACI,OAAO,CAAC,CAAC,EAAE;MAC5CT,MAAM,CAACO,GAAG,CAAC,GAAGC,KAAK;IACvB;EACJ;EACA,OAAOR,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}