{"ast":null,"code":"export async function fetchProducts() {\n  try {\n    const response = await fetch('/.netlify/functions/get-products');\n    if (!response.ok) {\n      throw new Error(`Error loading products: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error loading products:', error);\n  }\n}\nexport async function displayProductList(category = null, size = null) {\n  const products = await fetchProducts();\n  if (!products) return;\n  const productContainer = document.getElementById('product-container');\n  const productTitle = document.getElementById('product-title');\n  productContainer.innerHTML = '';\n  let filteredProducts = category && category !== 'all' ? products.filter(product => product.category.toLowerCase() === category.toLowerCase()) : products;\n  if (size && size !== 'all') {\n    filteredProducts = filteredProducts.filter(product => product.size && product.size.toLowerCase() === size.toLowerCase());\n  }\n  productTitle.innerHTML = category && category !== 'all' ? `${category.charAt(0).toUpperCase() + category.slice(1)}` : 'All Products';\n  filteredProducts.forEach(product => {\n    const productCard = document.createElement('div');\n    productCard.className = 'product-card';\n    productCard.innerHTML = `\n            <a href=\"/product/${product.id}\" class=\"product-link\">\n                <img src=\"${product.images[0]}\" alt=\"${product.name}\">\n                <h2>${product.name}</h2>\n            </a>\n            <p class=\"product-price-shop\">\n                <span class=\"price-amount-shop\">${product.price}</span><span class=\"price-currency-shop\"> €</span>\n            </p>\n        `;\n    productContainer.appendChild(productCard);\n  });\n}\nexport async function displayProductDetails() {\n  const pathParts = window.location.pathname.split('/');\n  const productId = pathParts[pathParts.length - 1];\n  const products = await fetchProducts();\n  if (!products) return;\n  const product = products.find(p => p.id === productId);\n  if (!product) {\n    document.getElementById('product-detail-container').innerHTML = `<p>Product not found.</p>`;\n    return;\n  }\n  document.querySelector('.product-main-image-container').innerHTML = `\n        <img src=\"${product.images[0]}\" alt=\"${product.name}\">\n    `;\n  document.querySelector('.product-info').innerHTML = `\n        <h1>${product.name}</h1>\n        <p>${product.description}</p>\n        <p>€${product.price.toFixed(2)}</p>\n    `;\n}","map":{"version":3,"names":["fetchProducts","response","fetch","ok","Error","statusText","json","error","console","displayProductList","category","size","products","productContainer","document","getElementById","productTitle","innerHTML","filteredProducts","filter","product","toLowerCase","charAt","toUpperCase","slice","forEach","productCard","createElement","className","id","images","name","price","appendChild","displayProductDetails","pathParts","window","location","pathname","split","productId","length","find","p","querySelector","description","toFixed"],"sources":["/Users/torbenschmidt/Documents/GitHub/nalan-shop/src/products/products.js"],"sourcesContent":["export async function fetchProducts() {\n    try {\n        const response = await fetch('/.netlify/functions/get-products');\n        if (!response.ok) {\n            throw new Error(`Error loading products: ${response.statusText}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error loading products:', error);\n    }\n}\n\nexport async function displayProductList(category = null, size = null) {\n    const products = await fetchProducts();\n    if (!products) return;\n\n    const productContainer = document.getElementById('product-container');\n    const productTitle = document.getElementById('product-title');\n    productContainer.innerHTML = '';\n\n    let filteredProducts = (category && category !== 'all')\n        ? products.filter(product => product.category.toLowerCase() === category.toLowerCase())\n        : products;\n\n    if (size && size !== 'all') {\n        filteredProducts = filteredProducts.filter(product => product.size && product.size.toLowerCase() === size.toLowerCase());\n    }\n\n    productTitle.innerHTML = category && category !== 'all'\n        ? `${category.charAt(0).toUpperCase() + category.slice(1)}`\n        : 'All Products';\n\n    filteredProducts.forEach(product => {\n        const productCard = document.createElement('div');\n        productCard.className = 'product-card';\n        productCard.innerHTML = `\n            <a href=\"/product/${product.id}\" class=\"product-link\">\n                <img src=\"${product.images[0]}\" alt=\"${product.name}\">\n                <h2>${product.name}</h2>\n            </a>\n            <p class=\"product-price-shop\">\n                <span class=\"price-amount-shop\">${product.price}</span><span class=\"price-currency-shop\"> €</span>\n            </p>\n        `;\n        productContainer.appendChild(productCard);\n    });\n}\n\nexport async function displayProductDetails() {\n    const pathParts = window.location.pathname.split('/');\n    const productId = pathParts[pathParts.length - 1];\n    const products = await fetchProducts();\n    if (!products) return;\n\n    const product = products.find(p => p.id === productId);\n    if (!product) {\n        document.getElementById('product-detail-container').innerHTML = `<p>Product not found.</p>`;\n        return;\n    }\n\n    document.querySelector('.product-main-image-container').innerHTML = `\n        <img src=\"${product.images[0]}\" alt=\"${product.name}\">\n    `;\n    document.querySelector('.product-info').innerHTML = `\n        <h1>${product.name}</h1>\n        <p>${product.description}</p>\n        <p>€${product.price.toFixed(2)}</p>\n    `;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}