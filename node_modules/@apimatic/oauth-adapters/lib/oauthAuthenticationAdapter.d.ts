import { OAuthToken } from './oAuthToken';
import { AuthenticatorInterface } from '@apimatic/core-interfaces';
import { OAuthConfiguration } from './oAuthConfiguration';
export declare const requestAuthenticationProvider: (initialOAuthToken?: OAuthToken | undefined, oAuthTokenProvider?: ((token: OAuthToken | undefined) => Promise<OAuthToken>) | undefined, oAuthOnTokenUpdate?: ((token: OAuthToken) => void) | undefined, oAuthConfiguration?: OAuthConfiguration | undefined) => AuthenticatorInterface<boolean>;
export declare function isValid(oAuthToken: OAuthToken | undefined): oAuthToken is OAuthToken;
export declare function isExpired(oAuthToken: OAuthToken, clockSkew?: number): boolean;
//# sourceMappingURL=oauthAuthenticationAdapter.d.ts.map